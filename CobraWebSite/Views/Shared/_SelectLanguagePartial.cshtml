@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> locOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = locOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div title="@localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage">

        
            @*<select name="culture" id="culture"
                    onchange="this.form.submit();"
                    asp-for="@requestCulture.RequestCulture.UICulture.Name"
                    >
                @foreach (var opt in cultureItems)
                {
                    <option id="@opt.Value">@opt.Text</option>
                }
            </select>*@
    <ul>
        @foreach (var item in cultureItems)
        {
        <li>
            @Html.ActionLink(item.Text, "SetLanguage", "Home", new { culture = item.Value , returnUrl = returnUrl}, null)

            @*<a onclick="this.form.submit();" id="@item.Value">@item.Text</a>*@
        </li>

        }

    </ul>
        
    </form>
</div>
@section Scripts {
    $(function() {
    $('a#').click(function() {
    $('form#fooForm').submit();
    });
    });

}
